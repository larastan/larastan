<?php

namespace Illuminate\Database\Eloquent\Relations;

use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Model;

/**
 * @template TRelatedModel of Model
 * @template TDeclaringModel of Model
 * @template TResult
 * @extends HasOneOrMany<TRelatedModel, TDeclaringModel, TResult>
 */
abstract class MorphOneOrMany extends HasOneOrMany
{
   /**
    * @param  Builder<TRelatedModel>  $query
    * @param  TDeclaringModel  $parent
    * @param  string  $type
    * @param  string  $id
    * @param  string  $localKey
    */
   public function __construct(Builder $query, Model $parent, $type, $id, $localKey);

    /**
     * Add constraints for inner join subselect for one of many relationships.
     *
     * @param  Builder<TRelatedModel>  $query
     * @param  model-property<TRelatedModel>|null  $column
     * @param  string|null  $aggregate
     * @return void
     */
    public function addOneOfManySubQueryConstraints(Builder $query, $column = null, $aggregate = null);

    /**
     * Make a new related instance for the given model.
     *
     * @param  TDeclaringModel  $parent
     * @return TRelatedModel
     */
    public function newRelatedInstanceFor(Model $parent);

    /**
     * Get the value of the model's foreign key.
     *
     * @param  TRelatedModel $model
     * @return mixed
     */
    protected function getRelatedKeyFrom(Model $model);
}
