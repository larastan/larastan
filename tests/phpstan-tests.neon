includes:
    - ../extension.neon
parameters:
    bootstrapFiles:
        - ../bootstrap.php
        - bootstrap.php
    checkGenericClassInNonGenericObjectType: true
    checkExplicitMixed: true
    ignoreErrors:
        - '#Return typehint of method Tests\\Features\\ReturnTypes\\Facades::testHttpBaseUrl\(\) has invalid type Illuminate\\Http\\Client\\PendingRequest\.#'
        - '#Call to static method baseUrl\(\) on an unknown class Illuminate\\Support\\Facades\\Http\.#'
        - '#testDiskGetDriver\(\) has invalid type League\\Flysystem\\FilesystemInterface.#'

        # This file is meant to test the correct recognition of magic methods within models.
        # Even though Model::make() is not optimal, it does coincedentally work and thus should
        # be recognized by the extension. We test the NoModelMake rule separately.
        -
            message: "#Called 'Model::make\\(\\)' which performs unnecessary work, use 'new Model\\(\\)'\\.#"
            count: 1
            path: Features/Methods/ModelExtension.php

        # Even though $model->relation->first() is not performant, these tests need to
        # access model relations via property and call methods on the resulting collection.
        -
            message: "#Called 'where' on Laravel collection, but could have been retrieved as a query\\.#"
            count: 1
            path: Features/ReturnTypes/CustomEloquentCollectionTest.php
        -
            message: "#Called 'first' on Laravel collection, but could have been retrieved as a query\\.#"
            count: 1
            path: Features/Models/Relations.php
        -
            message: "#Called 'first' on Laravel collection, but could have been retrieved as a query\\.#"
            count: 1
            path: Features/Properties/ModelPropertyExtension.php
